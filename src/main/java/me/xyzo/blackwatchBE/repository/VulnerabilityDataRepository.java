package me.xyzo.blackwatchBE.repository;

import me.xyzo.blackwatchBE.document.VulnerabilityDataDocument;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.mongodb.repository.MongoRepository;
import org.springframework.data.mongodb.repository.Query;
import org.springframework.stereotype.Repository;

import java.time.LocalDateTime;
import java.util.List;

@Repository
public interface VulnerabilityDataRepository extends MongoRepository<VulnerabilityDataDocument, String> {

    // CVE로 검색
    Page<VulnerabilityDataDocument> findByCveIdsIn(List<String> cveIds, Pageable pageable);

    // CVSS 범위 검색
    @Query("{ $and: [ " +
            "?#{[0] == null ? {} : {$expr: {$gte: [{$toDouble: '$cvss'}, ?0]}}}, " +
            "?#{[1] == null ? {} : {$expr: {$lte: [{$toDouble: '$cvss'}, ?1]}}} " +
            "] }")
    Page<VulnerabilityDataDocument> findByCvssRange(Double cvssMin, Double cvssMax, Pageable pageable);

    // 복합 검색을 위한 커스텀 쿼리
    @Query("{ $and: [ " +
            "?#{[0] == null ? {} : {'createdAt': {$gte: ?0}}}, " +
            "?#{[1] == null ? {} : {'createdAt': {$lte: ?1}}}, " +
            "?#{[2] == null ? {} : {'host': {$regex: ?2, $options: 'i'}}}, " +
            "?#{[3] == null ? {} : {'path': {$regex: ?3, $options: 'i'}}}, " +
            "?#{[4] == null ? {} : {'title': {$regex: ?4, $options: 'i'}}}, " +
            "?#{[5] == null ? {} : {'author': {$regex: ?5, $options: 'i'}}}, " +
            "?#{[6] == null ? {} : {'cveIds': {$in: ?6}}}, " +
            "?#{[7] == null ? {} : {$expr: {$gte: [{$toDouble: '$cvss'}, ?7]}}}, " +
            "?#{[8] == null ? {} : {$expr: {$lte: [{$toDouble: '$cvss'}, ?8]}}}, " +
            "?#{[9] == null ? {} : {'vulnerabilityClass': {$regex: ?9, $options: 'i'}}} " +
            "] }")
    Page<VulnerabilityDataDocument> findWithFilters(
            LocalDateTime from, LocalDateTime to, String host,
            String pathContains, String titleContains, String author,
            List<String> cves, Double cvssMin, Double cvssMax, String vulnClass,
            Pageable pageable);

    // 전체 텍스트 검색
    @Query("{ $or: [ " +
            "{'title': {$regex: ?0, $options: 'i'}}, " +
            "{'article': {$regex: ?0, $options: 'i'}} " +
            "] }")
    Page<VulnerabilityDataDocument> findByTextSearch(String searchText, Pageable pageable);
}
